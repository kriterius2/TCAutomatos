# -*- coding: utf-8 -*-
"""Transducer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1K7IQ-4urjUiu7KHQFgHDhvBtE0uQQ6mE
"""

# Mealy
class Transducer:
    def __init__(self, states, transitions, initial):
        self.states = states
        self.transitions = transitions
        self.initial = initial

    def step(self, input):
        current_state = self.initial
        print(f'Initial: {current_state}')
        for coin in input:
            match = False
            for transition in self.transitions:
                if transition[0] == current_state and transition[2] == coin:
                    print(transition[1], transition[3])
                    current_state = transition[1]
                    match = True
                    break
            if not match:
                print('Error')
                return

states = ['0', '25', '50', '75']
initial = '0'
transitions = [
    ['0', '25', 25, 0],
    ['0', '50', 50, 0],
    ['0', '0', 100, 1],
    ['25', '50', 25, 0],
    ['25', '75', 50, 0],
    ['25', '25', 100, 1],
    ['50', '75', 25, 0],
    ['50', '0', 50, 1],
    ['50', '50', 100, 1],
    ['75', '0', 25, 1],
    ['75', '25', 50, 1],
    ['75', '75', 100, 1]
]

# Coins sequence
input = [50, 25, 50, 100, 25, 50, 100]
transducer = Transducer(states, transitions, initial)
transducer.step(input)